{"version":3,"sources":["components/NavBar/NavBar.js","components/SearchBar/SearchBar.js","components/CasesInName/CasesInIndia/CasesInIndia.js","components/AllStatesCases/EachStateCases/EachStateCases.js","components/AllStatesCases/AllStatesCases.js","components/SearchSuggestion/SearchSuggestion.js","components/CovidHome/CovidHome.js","components/Footer/Footer.js","components/CovidAbout/Faqs/Faqs.js","components/Loading/Loader.js","components/CovidAbout/CovidAbout.js","components/NotFound/NotFound.js","components/CasesInName/CasesInName.js","components/CovidState/Districts/Districts.js","components/CovidGraphs/BarGraphs/BarGraphs.js","components/CovidGraphs/Linegraphs/Linegraphs.js","components/CovidGraphs/CovidGraphs.js","components/CovidState/CovidState.js","App.js","index.js"],"names":["NavBar","_Component","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_jsx","className","id","children","_jsxs","Link","to","type","Component","SearchBar","onChangeSearchBarInput","this","props","xmlns","width","height","fill","viewBox","d","onChange","event","placeholder","CasesInIndia","_this$props","covidData","stateName","confrimed","Object","keys","filter","state","map","e","total","confirmed","deceased","recovered","active","src","alt","objectPath","require","EachStateCases","eachState","fullNameValue","statesList","find","eachStateObject","state_code","answer","get","meta","population","AllStatesCases","SearchSuggestions","concat","state_name","fillRule","clipRule","CovidHome","_this","_len","length","args","Array","_key","searchBarInput","getCovidData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","setState","stop","target","getHomeComponent","searchSuggestionList","toLowerCase","includes","_Fragment","Footer","href","rel","Faqs","eachFaq","qno","question","CustomLoader","Loader","color","CovidAbout","faqsList","isLoading","getFAQs","faq","_this$state","NotFound","fillOpacity","CasesInName","confirmedButton","activeButton","recoveredButton","deceseadButton","_this2","onchangeTopDisticts","confirmedButtonClass","activeButtonClass","deceseadButtonClass","recoveredButtonClass","onClick","Districts","getTopDirstictActiveCases","distData","formate","distNames","element","sort","a","b","getTopDirstict","casesType","_this$props2","distName","eachDist","activeCaseType","BarGraphs","forBarGraph","forDateLabels","forConfirmedCases","forRecoveredCases","forDeceasedCases","dataForConfirmedCases","labels","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","dataForActiveCases","forActiveCases","dataForRecoveredCases","dataForDeceasedCases","Bar","options","title","display","text","fontSize","legend","position","LineGraphs","forLineGraphs","forMonthLabels","lineTension","pointHoverBorderColor","dataForTestedCases","forTestedCases","dataForTestRatioCases","forVaccinatedOneCases","dataForVaccinatedCases","forVaccinatedTwoCases","Line","CovidGraphs","barGraphs","lineGraphs","getBarGraphs","getLineGraphs","CovidState","stateFullName","stateNameId","allDistsData","lastUpdatedDateVal","testedCountVal","getDatesData","match","params","fetchedData","dates","getBargraphsData","getLineGraphsData","datesKeysList","allDatesLabels","forEach","item","push","format","Date","toString","allTendatesLabels","reverse","splice","dateCountConfirmedList","dateCountRecoveredList","dateCountDeceasedList","dateCountActiveList","delta","Number","isNaN","undefined","barGraphsDataObject","allMonthsLabels","confirmedList","recoveredList","activeList","deceasedList","testedList","vaccinatedOneList","vaccinatedTwoList","allUniQueMonthlabels","_toConsumableArray","Set","getFullYear","getMonth","getDate","tested","toFixed","vaccinated1","LineGraphsDataObject","casesTypeChnage","_callee2","newDistNamesList","lastUpdatedDate","testedCount","_context2","districts","last_updated","delta7","date","toLocaleString","month","App","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9b75aa3.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\nimport {Component} from 'react'\nimport './NavBar.css'\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav\n        className=\"covid-navbar navbar navbar-expand-lg navbar-dark\"\n        id=\"custom-navbar\"\n      >\n        <div className=\"container\">\n          <Link to=\"/\" className=\"nav-link custom-navbar-brand\">\n            COVID19<span className=\"navbar-india-text\">INDIA</span>\n          </Link>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon \" id=\"custom-toggler-icon\">\n              {' '}\n            </span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav ml-auto\">\n              <Link className=\"nav-link\" to=\"/\">\n                Home\n              </Link>\n              <Link className=\"nav-link\" to=\"/about\">\n                About\n              </Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\nexport default NavBar\n","import {Component} from 'react'\nimport './SearchBar.css'\n\nclass SearchBar extends Component {\n  render() {\n    const {onChangeSearchBarInput} = this.props\n    const onChangeSearchInput = event => {\n      onChangeSearchBarInput(event)\n    }\n    return (\n      <div className=\"covid-search-bar-component\">\n        <div className=\"covid-searchbar-container\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            fill=\"grey\"\n            className=\"bi bi-search\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n          </svg>\n          <input\n            className=\"covid-searchbar\"\n            onChange={onChangeSearchInput}\n            placeholder=\"Enter the state\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\nexport default SearchBar\n","import {Component} from 'react'\nimport '../CasesInName.css'\n\nclass CasesInIndia extends Component {\n  render() {\n    const {covidData, stateName} = this.props\n    const confrimed = Object.keys(covidData)\n      .filter(state => state === stateName)\n      .map(e => covidData[e].total.confirmed)\n\n    const deceased = Object.keys(covidData)\n      .filter(state => state === stateName)\n      .map(e => covidData[e].total.deceased)\n\n    const recovered = Object.keys(covidData)\n      .filter(state => state === stateName)\n      .map(e => covidData[e].total.recovered)\n\n    const active = confrimed - recovered - deceased\n\n    return (\n      <div className=\"india-cases container mt-5\">\n        <div className=\"row justify-content-center\">\n          <div className=\"india-confirmed col-5 col-lg-2 cases-confirmed card-name confirmed\">\n            <h1 className=\"card-name-tittle\">Confirmed</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976788/samples/covid-19/Group_l5hjgx_pnrpdy.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{confrimed}</p>\n          </div>\n          <div className=\"india-active col-5 col-lg-2 cases-active card-name active\">\n            <h1 className=\"card-name-tittle\">Active</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976787/samples/covid-19/protection_1_lmcx9l_opctg3.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{active}</p>\n          </div>\n          <div className=\"india-recovered col-5 col-lg-2 cases-recovered card-name recovered\">\n            <h1 className=\"card-name-tittle\">Recoverd</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976786/samples/covid-19/recovered_1_qs1y8f_tlshd6.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{recovered}</p>\n          </div>\n          <div className=\"india-deceased col-5 col-lg-2 cases-deceased card-name deceased\">\n            <h1 className=\"card-name-tittle\">Deceased</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976787/samples/covid-19/Outline_qoly2o_vyqewd.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{deceased}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CasesInIndia\n","import {Component} from 'react'\nimport './EachStateCases.css'\n\nconst objectPath = require('object-path')\n\nclass EachStateCases extends Component {\n  render() {\n    const {covidData, eachState, statesList} = this.props\n    const fullNameValue = statesList.find(\n      eachStateObject => eachStateObject.state_code === eachState,\n    )\n\n    const answer = objectPath.get(fullNameValue, `state_name`)\n    return (\n      <ul className=\"table-state-list\">\n        <li className=\"state-name\"> {answer}</li>\n        <li className=\"text-danger \">{covidData[eachState].total.confirmed}</li>\n        <li className=\"text-primary\">\n          {covidData[eachState].total.confirmed -\n            covidData[eachState].total.recovered -\n            covidData[eachState].total.deceased}\n        </li>\n        <li className=\"text-success\">{covidData[eachState].total.recovered}</li>\n        <li className=\"text-secondary\">\n          {covidData[eachState].total.deceased}\n        </li>\n        <li className=\"text light\">{covidData[eachState].meta.population}</li>\n      </ul>\n    )\n  }\n}\n\nexport default EachStateCases\n","import {Component} from 'react'\nimport './AllStatesCases.css'\nimport EachStateCases from './EachStateCases/EachStateCases'\n\nclass AllStatesCases extends Component {\n  render() {\n    const {covidData, statesList} = this.props\n    const keys = Object.keys(covidData)\n\n    return (\n      <div className=\"all-states-cases-component\">\n        <div className=\"all-states-cases-container\">\n          <div className=\"table-heading\">\n            <ul className=\"table-unorder-head-list\">\n              <li>States/UI</li>\n              <li>Conformed</li>\n              <li>Active</li>\n              <li>Recovered</li>\n              <li>Deceased</li>\n              <li>Population</li>\n            </ul>\n          </div>\n          <hr className=\"hr-line\" />\n          {keys.map(eachState => (\n            <EachStateCases\n              covidData={covidData}\n              key={eachState}\n              eachState={eachState}\n              statesList={statesList}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\nexport default AllStatesCases\n","import {Link} from 'react-router-dom'\nimport {Component} from 'react'\nimport './SearchSuggestion.css'\n\nclass SearchSuggestions extends Component {\n  render() {\n    const {statesList} = this.props\n\n    return (\n      <div className=\"covid-search-suggestion-component\">\n        {statesList.map(eachState => (\n          <Link to={`/state/${eachState.state_code}`}>\n            {' '}\n            <li className=\"covid-search-suggestion-container\">\n              <p>{eachState.state_name}</p>\n              <div className=\"button-div \">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary\"\n                  id=\"custom-button\"\n                >\n                  {eachState.state_code}\n                  <svg\n                    width=\"6\"\n                    height=\"10\"\n                    className=\"mb-1 ml-1\"\n                    viewBox=\"0 0 6 10\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      clipRule=\"evenodd\"\n                      d=\"M0.792893 0.792893C0.402369 1.18342 0.402369 1.81658 0.792893 2.20711L3.58579 5L0.792893 7.79289C0.402369 8.18342 0.402369 8.81658 0.792893 9.20711C1.18342 9.59763 1.81658 9.59763 2.20711 9.20711L5.70711 5.70711C6.09763 5.31658 6.09763 4.68342 5.70711 4.29289L2.20711 0.792893C1.81658 0.402369 1.18342 0.402369 0.792893 0.792893Z\"\n                      fill=\"#FACC15\"\n                    />\n                  </svg>\n                </button>\n              </div>\n            </li>\n          </Link>\n        ))}\n      </div>\n    )\n  }\n}\nexport default SearchSuggestions\n","import {Component} from 'react'\nimport './CovidHome.css'\nimport SearchBar from '../SearchBar/SearchBar'\nimport CasesInIndia from '../CasesInName/CasesInIndia/CasesInIndia'\nimport AllStatesCases from '../AllStatesCases/AllStatesCases'\nimport SearchSuggestions from '../SearchSuggestion/SearchSuggestion'\n\nconst statesList = [\n  {\n    state_code: 'AN',\n    state_name: 'Andaman and Nicobar Islands',\n  },\n  {\n    state_code: 'AP',\n    state_name: 'Andhra Pradesh',\n  },\n  {\n    state_code: 'AR',\n    state_name: 'Arunachal Pradesh',\n  },\n  {\n    state_code: 'AS',\n    state_name: 'Assam',\n  },\n  {\n    state_code: 'BR',\n    state_name: 'Bihar',\n  },\n  {\n    state_code: 'CH',\n    state_name: 'Chandigarh',\n  },\n  {\n    state_code: 'CT',\n    state_name: 'Chhattisgarh',\n  },\n  {\n    state_code: 'DN',\n    state_name: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    state_code: 'DL',\n    state_name: 'Delhi',\n  },\n  {\n    state_code: 'GA',\n    state_name: 'Goa',\n  },\n  {\n    state_code: 'GJ',\n    state_name: 'Gujarat',\n  },\n  {\n    state_code: 'HR',\n    state_name: 'Haryana',\n  },\n  {\n    state_code: 'HP',\n    state_name: 'Himachal Pradesh',\n  },\n  {\n    state_code: 'JK',\n    state_name: 'Jammu and Kashmir',\n  },\n  {\n    state_code: 'JH',\n    state_name: 'Jharkhand',\n  },\n  {\n    state_code: 'KA',\n    state_name: 'Karnataka',\n  },\n  {\n    state_code: 'KL',\n    state_name: 'Kerala',\n  },\n  {\n    state_code: 'LA',\n    state_name: 'Ladakh',\n  },\n  {\n    state_code: 'LD',\n    state_name: 'Lakshadweep',\n  },\n  {\n    state_code: 'MH',\n    state_name: 'Maharashtra',\n  },\n  {\n    state_code: 'MP',\n    state_name: 'Madhya Pradesh',\n  },\n  {\n    state_code: 'MN',\n    state_name: 'Manipur',\n  },\n  {\n    state_code: 'ML',\n    state_name: 'Meghalaya',\n  },\n  {\n    state_code: 'MZ',\n    state_name: 'Mizoram',\n  },\n  {\n    state_code: 'NL',\n    state_name: 'Nagaland',\n  },\n  {\n    state_code: 'OR',\n    state_name: 'Odisha',\n  },\n  {\n    state_code: 'PY',\n    state_name: 'Puducherry',\n  },\n  {\n    state_code: 'PB',\n    state_name: 'Punjab',\n  },\n  {\n    state_code: 'RJ',\n    state_name: 'Rajasthan',\n  },\n  {\n    state_code: 'SK',\n    state_name: 'Sikkim',\n  },\n  {\n    state_code: 'TN',\n    state_name: 'Tamil Nadu',\n  },\n  {\n    state_code: 'TG',\n    state_name: 'Telangana',\n  },\n  {\n    state_code: 'TR',\n    state_name: 'Tripura',\n  },\n  {\n    state_code: 'UP',\n    state_name: 'Uttar Pradesh',\n  },\n  {\n    state_code: 'UT',\n    state_name: 'Uttarakhand',\n  },\n  {\n    state_code: 'WB',\n    state_name: 'West Bengal',\n  },\n]\n\nclass CovidHome extends Component {\n  state = {\n    searchBarInput: '',\n    covidData: [],\n  }\n\n  componentDidMount() {\n    this.getCovidData()\n  }\n\n  getCovidData = async () => {\n    const response = await fetch(\n      'https://data.covid19india.org/v4/min/data.min.json',\n    )\n    const data = await response.json()\n    this.setState({covidData: data})\n  }\n\n  onChangeSearchBarInput = event => {\n    this.setState({searchBarInput: event.target.value})\n  }\n\n  getHomeComponent = () => {\n    const {searchBarInput} = this.state\n    const {covidData} = this.state\n\n    const TT = 'TT'\n\n    const searchSuggestionList = statesList.filter(eachStateObject =>\n      eachStateObject.state_name\n        .toLowerCase()\n        .includes(searchBarInput.toLowerCase()),\n    )\n    if (searchBarInput === '') {\n      return (\n        <>\n          <CasesInIndia covidData={covidData} stateName={TT} />\n          <AllStatesCases statesList={statesList} covidData={covidData} />\n        </>\n      )\n    }\n    return <SearchSuggestions statesList={searchSuggestionList} />\n  }\n\n  render() {\n    return (\n      <div className=\"covid-home-container\">\n        <SearchBar onChangeSearchBarInput={this.onChangeSearchBarInput} />\n        {this.getHomeComponent()}\n      </div>\n    )\n  }\n}\nexport default CovidHome\n","import {Link} from 'react-router-dom'\nimport './Footer.css'\n\nconst Footer = () => (\n  <div className=\"container-fluid footer-container pt-5\">\n    <div className=\"row footer-container\">\n      <Link to=\"/\" className=\"nav-link custom-navbar-brand text-center col-12\">\n        COVID19<span className=\"navbar-india-text\">INDIA</span>\n      </Link>\n      <p className=\"footer-tag-line col-12 text-center\">\n        we stand with everyone fighting on the front lines,\n      </p>\n      <div className=\"text-center col-12\">\n        <a\n          href=\"https://github.com/Jatink1210\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <svg\n            width=\"33\"\n            height=\"36\"\n            className=\"footer-icons\"\n            viewBox=\"0 0 33 36\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            {/* Your SVG path */}\n          </svg>\n        </a>\n        <a\n          href=\"https://www.instagram.com/jatink1210\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <svg\n            width=\"33\"\n            height=\"32\"\n            className=\" footer-icons\"\n            viewBox=\"0 0 33 32\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            {/* Your SVG path */}\n          </svg>\n        </a>\n        <a\n          href=\"https://www.twitter.com/jatink1210\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <svg\n            width=\"30\"\n            height=\"25\"\n            className=\"footer-icons\"\n            viewBox=\"0 0 30 25\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            {/* Your SVG path */}\n          </svg>\n        </a>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Footer\n","import './Faqs.css'\n\nconst Faqs = props => {\n  const {eachFaq} = props\n  const {answer, qno, question} = eachFaq\n  return (\n    <li className=\"each-question\">\n      <p className=\"faqs-question\">{`${qno}.${question}`}</p>\n      <p className=\"faqs-answer\">{answer}</p>\n    </li>\n  )\n}\nexport default Faqs\n","import Loader from 'react-loader-spinner'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\n\nconst CustomLoader = () => (\n  <div>\n    <div className=\"loader-component mt-5 mb-5\">\n      <Loader\n        type=\"TailSpin\"\n        className=\"text-center\"\n        color=\"#00BFFF\"\n        height={50}\n        width={50}\n      />\n    </div>\n  </div>\n)\n\nexport default CustomLoader\n","import {Component} from 'react'\nimport './CovidAbout.css'\nimport Faqs from './Faqs/Faqs'\nimport CustomLoader from '../Loading/Loader'\n\nclass CovidAbout extends Component {\n  state = {\n    faqsList: [],\n    isLoading: true,\n  }\n\n  componentDidMount() {\n    this.getFAQs()\n  }\n\n  getFAQs = async () => {\n    const response = await fetch(\n      'https://data.covid19india.org/website_data.json',\n    )\n    const data = await response.json()\n    this.setState({faqsList: data.faq, isLoading: false})\n  }\n\n  render() {\n    const {faqsList, isLoading} = this.state\n    return (\n      <div className=\"covid-about-component\">\n        {isLoading ? (\n          <CustomLoader />\n        ) : (\n          <div className=\"covid-about-conatiner\">\n            <h1 className=\"about-main-heading ml-5\">About</h1>\n            <p className=\"update-date ml-5\">Last update on march 28th 2021.</p>\n            <h2 className=\"update-info ml-5\">\n              COVID-19 vaccines be ready for distribution\n            </h2>\n            <hr className=\"hr-line ml-5\" />\n            <ul className=\"faqs-container ml-1\">\n              {faqsList.map(eachFaq => (\n                <Faqs eachFaq={eachFaq} key={eachFaq.qno} />\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\nexport default CovidAbout\n","import './NotFound.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-component\">\n    <svg\n      width=\"448\"\n      height=\"300\"\n      viewBox=\"0 0 448 300\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M444.522 227.517H397.416C407.873 184.692 402.649 139.537 382.692 100.235H416.099C416.556 100.235 417.009 100.145 417.431 99.9702C417.853 99.7954 418.236 99.5391 418.559 99.2158C418.882 98.8926 419.139 98.5088 419.313 98.0864C419.488 97.6641 419.578 97.2114 419.578 96.7542C419.578 95.8312 419.211 94.946 418.559 94.2933C417.907 93.6406 417.022 93.2739 416.099 93.2739H378.948C347.421 37.588 287.662 0 219.13 0C173.547 0 131.848 16.6282 99.7525 44.151H43.2298C42.3075 44.1515 41.4231 44.5183 40.7709 45.1709C40.1187 45.8235 39.7521 46.7084 39.7516 47.6313C39.7516 48.0884 39.8415 48.541 40.0163 48.9632C40.1911 49.3855 40.4473 49.7691 40.7703 50.0923C41.0933 50.4155 41.4768 50.6719 41.8988 50.8468C42.3208 51.0217 42.773 51.1117 43.2298 51.1117H92.0805C88.1796 54.8572 84.4475 58.7685 80.8845 62.8455H3.47826C2.55593 62.846 1.67152 63.2129 1.01934 63.8655C0.367151 64.5181 0.000526595 65.403 0 66.3259C0 67.2489 0.366454 68.1342 1.01875 68.7869C1.67106 69.4396 2.55577 69.8063 3.47826 69.8063H75.0986C50.3533 101.106 35.5776 140.657 35.5776 183.664C35.5497 206.993 39.9758 230.113 48.6181 251.78H39.4534C38.5311 251.78 37.6467 252.147 36.9945 252.8C36.3423 253.452 35.9757 254.337 35.9752 255.26C35.9752 256.183 36.3416 257.068 36.9939 257.721C37.6462 258.374 38.5309 258.741 39.4534 258.741H51.5657C52.8311 261.563 54.1648 264.348 55.5667 267.093H14.4099C13.4876 267.094 12.6032 267.461 11.951 268.113C11.2988 268.766 10.9322 269.651 10.9317 270.574C10.9317 271.497 11.2981 272.382 11.9504 273.035C12.6027 273.688 13.4874 274.054 14.4099 274.054H59.3113C63.5893 281.611 68.3974 288.855 73.6994 295.732H364.561C374.516 282.823 382.707 268.644 388.917 253.57H423.056C423.513 253.57 423.965 253.48 424.387 253.305C424.809 253.131 425.193 252.874 425.516 252.551C425.839 252.228 426.095 251.844 426.27 251.422C426.445 250.999 426.534 250.546 426.534 250.089C426.534 249.166 426.168 248.281 425.515 247.628C424.863 246.976 423.978 246.609 423.056 246.609H391.616C393.074 242.631 394.39 238.588 395.566 234.477H444.522C444.979 234.478 445.431 234.388 445.853 234.213C446.275 234.038 446.659 233.782 446.982 233.459C447.305 233.135 447.561 232.752 447.736 232.329C447.91 231.907 448 231.454 448 230.997C448 230.074 447.634 229.189 446.981 228.536C446.329 227.883 445.444 227.517 444.522 227.517Z\"\n        fill=\"#F9F8F8\"\n        fillOpacity=\"0.1\"\n      />\n      <path\n        d=\"M296.276 295.72H274.039C274.039 294.949 274.345 294.21 274.89 293.665C275.435 293.12 276.174 292.813 276.945 292.812H293.368C294.139 292.813 294.879 293.119 295.424 293.664C295.97 294.21 296.276 294.949 296.276 295.72Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M291.007 292.812H279.306L283.108 184.356L285.664 186.056L291.007 292.812Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M294.621 295.72H272.386C272.385 295.339 272.46 294.96 272.606 294.608C272.752 294.255 272.966 293.934 273.236 293.664C273.506 293.394 273.826 293.18 274.179 293.034C274.532 292.888 274.91 292.812 275.292 292.813H291.715C292.486 292.813 293.225 293.12 293.77 293.665C294.315 294.21 294.621 294.949 294.621 295.72Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M283.502 185.315L339.454 217.638L338.844 214.456C338.723 213.829 338.377 213.266 337.872 212.875L301.319 184.563C300.989 184.307 300.603 184.134 300.193 184.058C299.783 183.981 299.361 184.004 298.961 184.123L291.627 186.311C291.285 186.413 290.925 186.445 290.571 186.403C290.216 186.361 289.873 186.247 289.564 186.068L284.691 183.266L283.502 185.315Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M282.316 183.266L226.363 215.59L229.418 216.648C230.025 216.858 230.688 216.841 231.283 216.598L274.053 199.083C274.442 198.924 274.786 198.675 275.059 198.356C275.332 198.037 275.525 197.658 275.621 197.249L277.386 189.811C277.47 189.462 277.624 189.133 277.838 188.845C278.053 188.556 278.324 188.315 278.635 188.135L283.502 185.323L282.316 183.266Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M284.689 183.266V118.611L282.242 120.729C281.758 121.149 281.443 121.73 281.356 122.366L275.129 168.191C275.072 168.605 275.115 169.027 275.253 169.422C275.391 169.816 275.621 170.172 275.924 170.46L281.489 175.715C281.75 175.961 281.957 176.258 282.099 176.587C282.241 176.917 282.314 177.271 282.314 177.63V183.266H284.689Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M288.873 292.812H278.134L281.936 184.356H285.07L288.873 292.812Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M286.159 184.972C286.508 183.493 285.592 182.01 284.114 181.661C282.635 181.312 281.154 182.228 280.805 183.708C280.456 185.187 281.371 186.67 282.85 187.019C284.329 187.368 285.81 186.452 286.159 184.972Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M283.315 186.703C284.7 186.703 285.823 185.579 285.823 184.193C285.823 182.807 284.7 181.683 283.315 181.683C281.93 181.683 280.807 182.807 280.807 184.193C280.807 185.579 281.93 186.703 283.315 186.703Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M227.355 215.926L280.807 184.193L280.759 184.157L226.363 215.582L227.355 215.926Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M288.873 292.108H278.158V292.812H288.873V292.108Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M283.896 119.299L284.631 181.924L284.689 181.9V118.611L283.896 119.299Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M339.258 216.606L285.067 186.154L285.059 186.213L339.455 217.638L339.258 216.606Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M369.33 295.722H333.73C333.73 295.11 333.849 294.503 334.083 293.938C334.317 293.372 334.659 292.858 335.092 292.424C335.524 291.991 336.037 291.648 336.603 291.413C337.168 291.179 337.774 291.058 338.385 291.058H364.677C365.288 291.058 365.893 291.179 366.458 291.413C367.023 291.647 367.536 291.99 367.968 292.422C368.4 292.855 368.743 293.368 368.976 293.934C369.21 294.499 369.33 295.104 369.33 295.716V295.722Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M360.896 291.064H342.164L348.252 117.428L352.344 120.148L360.896 291.064Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M366.683 295.722H331.083C331.083 295.111 331.203 294.505 331.437 293.94C331.67 293.375 332.013 292.861 332.445 292.429C332.877 291.996 333.39 291.653 333.955 291.419C334.52 291.185 335.125 291.064 335.736 291.064H362.038C363.272 291.064 364.456 291.555 365.329 292.429C366.202 293.302 366.692 294.487 366.692 295.722H366.683Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M348.882 118.963L438.46 170.713L437.369 165.033C437.25 164.401 436.905 163.835 436.397 163.442L376.77 117.253C376.439 116.997 376.053 116.823 375.642 116.747C375.231 116.671 374.808 116.693 374.408 116.813L361.243 120.759C360.9 120.861 360.54 120.892 360.185 120.851C359.83 120.81 359.487 120.696 359.177 120.518L350.786 115.669L348.882 118.963Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M346.981 115.669L257.403 167.42L262.863 169.313C263.468 169.522 264.129 169.504 264.722 169.261L335.762 140.171L339.51 124.376L348.882 118.963L346.981 115.669Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M350.78 115.67V12.1714L346.407 15.9501C345.922 16.3692 345.608 16.9514 345.523 17.5868L335.362 92.3491C335.306 92.7636 335.348 93.1857 335.486 93.5806C335.625 93.9755 335.855 94.3318 336.157 94.6203L346.143 104.057C346.404 104.303 346.611 104.6 346.754 104.929C346.896 105.259 346.969 105.614 346.97 105.972V115.664L350.78 115.67Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M357.48 291.064H340.285L346.373 117.428H351.39L357.48 291.064Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M352.948 119.114C353.879 116.866 352.812 114.289 350.566 113.358C348.319 112.427 345.744 113.494 344.814 115.742C343.883 117.99 344.95 120.567 347.196 121.498C349.443 122.429 352.018 121.361 352.948 119.114Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M352.29 118.706C353.139 116.657 352.166 114.307 350.118 113.458C348.069 112.609 345.72 113.582 344.872 115.632C344.023 117.682 344.996 120.032 347.045 120.881C349.093 121.73 351.442 120.756 352.29 118.706Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M258.991 167.97L344.567 117.169L344.491 117.109L257.403 167.42L258.991 167.97Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M357.48 289.937H340.325V291.063H357.48V289.937Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M349.512 13.2752L350.69 113.534L350.78 113.498V12.1714L349.512 13.2752Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M438.142 169.061L351.386 120.308L351.374 120.403L438.46 170.713L438.142 169.061Z\"\n        fill=\"#ECECEC\"\n      />\n      <path\n        d=\"M105.042 142.797C105.042 131.279 95.7111 121.942 84.2011 121.942C72.6911 121.942 63.3604 131.279 63.3604 142.797V190.798C63.3604 202.316 72.6911 211.652 84.2011 211.652C95.7111 211.652 105.042 202.316 105.042 190.798V142.797Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M85.3392 295.832H83.0654V155.296C83.0654 154.995 83.1852 154.705 83.3984 154.492C83.6116 154.279 83.9008 154.159 84.2023 154.159C84.5038 154.159 84.793 154.279 85.0062 154.492C85.2194 154.705 85.3392 154.995 85.3392 155.296V295.832Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M85.339 174.343L79.0165 163.384C78.8657 163.123 78.6174 162.932 78.3261 162.854C78.0348 162.776 77.7244 162.817 77.4632 162.968C77.202 163.119 77.0114 163.367 76.9333 163.659C76.8552 163.95 76.8961 164.261 77.0468 164.522L83.3693 175.48L85.339 174.343Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M85.0331 187.442L91.3556 176.484C91.4362 176.355 91.49 176.21 91.5138 176.06C91.5375 175.909 91.5306 175.755 91.4937 175.607C91.4567 175.459 91.3904 175.32 91.2986 175.198C91.2068 175.076 91.0915 174.974 90.9595 174.898C90.8274 174.821 90.6814 174.772 90.5301 174.754C90.3787 174.735 90.2252 174.747 90.0786 174.789C89.9319 174.831 89.7952 174.902 89.6766 174.998C89.5579 175.093 89.4597 175.212 89.3879 175.347L83.0654 186.305L85.0331 187.442Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M163.886 101.372C163.886 86.7474 152.037 74.8916 137.421 74.8916C122.805 74.8916 110.957 86.7474 110.957 101.372V162.33C110.957 176.955 122.805 188.811 137.421 188.811C152.037 188.811 163.886 176.955 163.886 162.33V101.372Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M138.864 295.698H135.978V117.239C135.978 116.856 136.13 116.488 136.401 116.217C136.671 115.946 137.038 115.793 137.421 115.793C137.804 115.793 138.171 115.946 138.441 116.217C138.712 116.488 138.864 116.856 138.864 117.239V295.698Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M138.864 141.432L130.836 127.51C130.741 127.346 130.615 127.202 130.465 127.087C130.315 126.971 130.143 126.886 129.96 126.837C129.777 126.788 129.586 126.776 129.398 126.8C129.21 126.825 129.029 126.887 128.865 126.981C128.7 127.076 128.556 127.202 128.441 127.353C128.326 127.503 128.241 127.675 128.192 127.858C128.143 128.042 128.13 128.233 128.155 128.421C128.18 128.609 128.241 128.79 128.336 128.954L136.364 142.876L138.864 141.432Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M138.478 158.076L146.506 144.155C146.698 143.823 146.749 143.429 146.65 143.059C146.551 142.689 146.309 142.374 145.978 142.182C145.646 141.991 145.252 141.939 144.882 142.038C144.512 142.137 144.197 142.379 144.006 142.711L135.978 156.633L138.478 158.076Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M97.0578 287.938C98.2722 286.797 98.8267 285.494 98.3477 284.575C97.7515 283.44 95.7639 283.264 93.655 284.064C93.7624 283.79 93.8538 283.505 93.9552 283.213C95.0841 279.607 94.4382 276.194 92.5162 275.592C90.6399 274.995 88.2429 277.304 87.0782 280.763C86.1142 276.803 83.6357 274.013 81.5129 274.512C79.5115 274.983 78.5316 278.205 79.1756 281.898C76.2459 280.603 73.4116 280.705 72.5172 282.266C71.585 283.883 73.0379 286.506 75.8046 288.419C74.4928 288.859 73.5905 289.664 73.4672 290.673C73.3162 291.914 74.3775 293.135 76.063 293.891C75.9696 294.117 75.9475 294.367 75.9994 294.607C76.1763 295.354 77.1224 295.816 78.3606 295.865H94.1917V295.851C94.4958 295.812 94.7244 295.682 94.8019 295.476C94.8253 295.401 94.8328 295.323 94.8239 295.245C94.815 295.168 94.7899 295.093 94.7502 295.026C95.5731 294.947 96.1912 294.628 96.3959 294.078C96.5529 293.654 96.4337 293.165 96.1057 292.685C98.2424 292.542 99.8821 291.605 99.9378 290.4C99.9835 289.338 98.787 288.378 97.0578 287.938Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M129.966 281.289C132.2 279.187 133.222 276.791 132.351 275.102C131.26 273.012 127.613 272.692 123.719 274.164C123.918 273.656 124.102 273.133 124.272 272.594C126.347 265.964 125.162 259.691 121.624 258.583C118.176 257.502 113.767 261.73 111.625 268.084C109.85 260.801 105.294 255.668 101.389 256.589C97.7095 257.454 95.9088 263.378 97.0914 270.17C91.7031 267.784 86.5036 267.982 84.8479 270.85C83.1326 273.822 85.8039 278.648 90.8941 282.164C88.4812 282.974 86.8216 284.454 86.595 286.309C86.3148 288.59 88.2685 290.838 91.3652 292.226C91.1931 292.643 91.1529 293.103 91.2499 293.544C91.5719 294.919 93.313 295.768 95.5888 295.857H124.705V295.831C125.265 295.758 125.683 295.521 125.826 295.141C125.87 295.005 125.884 294.86 125.867 294.717C125.851 294.575 125.804 294.437 125.73 294.314C127.245 294.167 128.384 293.568 128.757 292.568C129.048 291.79 128.829 290.889 128.225 290.008C132.156 289.744 135.181 288.019 135.273 285.804C135.348 283.861 133.146 282.095 129.966 281.289Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M325.698 282.789C323.711 280.92 322.8 278.784 323.586 277.28C324.556 275.421 327.803 275.136 331.272 276.445C331.094 275.994 330.93 275.53 330.779 275.053C328.932 269.148 329.984 263.562 333.136 262.575C336.207 261.613 340.132 265.377 342.04 271.035C343.63 264.552 347.677 259.98 351.155 260.799C354.431 261.569 356.035 266.845 354.981 272.893C359.779 270.773 364.41 270.942 365.885 273.49C367.412 276.137 365.033 280.434 360.501 283.565C362.649 284.287 364.126 285.603 364.329 287.256C364.577 289.286 362.838 291.289 360.079 292.524C360.233 292.896 360.269 293.305 360.183 293.698C359.895 294.923 358.344 295.686 356.317 295.758H330.393V295.736C329.892 295.67 329.52 295.462 329.399 295.121C329.361 295 329.348 294.871 329.363 294.744C329.377 294.617 329.418 294.494 329.483 294.384C328.137 294.254 327.121 293.721 326.79 292.83C326.529 292.136 326.724 291.335 327.263 290.551C323.762 290.317 321.073 288.781 320.988 286.806C320.906 285.08 322.868 283.501 325.698 282.789Z\"\n        fill=\"#EAEAEA\"\n      />\n      <path\n        d=\"M355.28 290.543C354.485 289.788 354.109 288.924 354.427 288.318C354.825 287.566 356.13 287.451 357.532 287.98C357.46 287.797 357.393 287.608 357.333 287.415C356.586 285.028 357.013 282.773 358.285 282.373C359.525 281.985 361.111 283.505 361.882 285.792C362.52 283.173 364.16 281.325 365.565 281.655C366.889 281.968 367.537 284.1 367.112 286.542C369.05 285.687 370.922 285.746 371.516 286.786C372.134 287.856 371.172 289.593 369.342 290.857C370.21 291.15 370.807 291.681 370.888 292.349C370.99 293.17 370.292 293.978 369.171 294.479C369.234 294.629 369.248 294.794 369.213 294.952C369.097 295.448 368.471 295.748 367.652 295.784H357.176C357.093 295.782 357.013 295.757 356.943 295.714C356.873 295.67 356.816 295.608 356.778 295.535C356.763 295.486 356.758 295.434 356.764 295.383C356.77 295.332 356.786 295.283 356.812 295.239C356.268 295.185 355.858 294.97 355.725 294.61C355.681 294.452 355.676 294.286 355.71 294.125C355.745 293.965 355.818 293.815 355.924 293.689C354.509 293.594 353.423 292.974 353.388 292.176C353.35 291.468 354.143 290.834 355.28 290.543Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M229.229 283.54C227.353 281.776 226.496 279.762 227.242 278.348C228.156 276.594 231.217 276.325 234.486 277.552C234.319 277.127 234.165 276.688 234.023 276.236C232.28 270.667 233.276 265.405 236.245 264.474C239.139 263.567 242.84 267.115 244.637 272.449C246.128 266.335 249.952 262.028 253.229 262.799C256.316 263.525 257.829 268.499 256.837 274.199C261.358 272.21 265.723 272.361 267.112 274.77C268.553 277.264 266.317 281.315 262.038 284.266C264.064 284.946 265.457 286.187 265.648 287.747C265.88 289.66 264.24 291.547 261.641 292.719C261.786 293.069 261.82 293.454 261.738 293.824C261.468 294.978 260.007 295.69 258.095 295.765H233.648V295.746C233.177 295.682 232.827 295.485 232.708 295.165C232.671 295.05 232.659 294.929 232.672 294.809C232.685 294.69 232.724 294.574 232.785 294.471C231.515 294.347 230.561 293.844 230.247 293.005C230.002 292.353 230.185 291.597 230.692 290.857C227.393 290.636 224.859 289.189 224.777 287.327C224.711 285.698 226.56 284.217 229.229 283.54Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M256.36 288.845C255.297 287.85 254.812 286.707 255.231 285.903C255.75 284.909 257.483 284.758 259.334 285.458C259.241 285.215 259.154 284.967 259.071 284.712C258.078 281.56 258.648 278.577 260.331 278.05C261.969 277.537 264.066 279.545 265.084 282.566C265.928 279.104 268.095 276.663 269.951 277.101C271.7 277.513 272.557 280.331 271.995 283.559C274.557 282.427 277.027 282.517 277.814 283.881C278.631 285.295 277.361 287.59 274.94 289.251C276.087 289.636 276.876 290.338 276.983 291.221C277.117 292.305 276.188 293.373 274.716 294.034C274.797 294.232 274.817 294.45 274.771 294.66C274.616 295.314 273.789 295.718 272.708 295.76H258.865V295.748C258.754 295.748 258.646 295.717 258.552 295.659C258.458 295.601 258.382 295.518 258.332 295.42C258.31 295.354 258.303 295.284 258.311 295.216C258.319 295.147 258.342 295.081 258.378 295.022C257.658 294.952 257.116 294.668 256.939 294.193C256.8 293.823 256.905 293.397 257.191 292.976C255.323 292.85 253.886 292.031 253.842 290.987C253.8 290.064 254.848 289.229 256.36 288.845Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M270.102 124.001C269.936 124.001 269.77 124.027 269.612 124.076C269.612 123.995 269.621 123.913 269.621 123.83C269.62 122.997 269.318 122.193 268.771 121.566C268.223 120.938 267.468 120.53 266.644 120.416C265.819 120.302 264.982 120.49 264.285 120.945C263.588 121.4 263.079 122.092 262.852 122.893C262.654 122.836 262.449 122.807 262.244 122.807C261.662 122.825 261.111 123.068 260.706 123.485C260.301 123.903 260.074 124.462 260.074 125.044C260.074 125.626 260.301 126.185 260.706 126.602C261.111 127.02 261.662 127.263 262.244 127.28H262.361H270.102C270.527 127.265 270.93 127.086 271.225 126.78C271.52 126.474 271.685 126.066 271.685 125.64C271.685 125.215 271.52 124.807 271.225 124.501C270.93 124.195 270.527 124.015 270.102 124.001Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M209.89 86.3173C208.992 86.3171 208.111 86.5604 207.34 87.0213C206.919 85.2084 205.842 83.6158 204.316 82.5507C202.791 81.4857 200.925 81.0237 199.08 81.2539C198.082 79.029 196.353 77.2139 194.179 76.1116C192.005 75.0093 189.519 74.6865 187.137 75.1972C184.754 75.7079 182.618 77.0211 181.087 78.9176C179.555 80.814 178.72 83.1789 178.721 85.6173C178.721 85.6789 178.721 85.7425 178.721 85.8042C177.976 85.4521 177.162 85.272 176.339 85.2773C175.516 85.2825 174.704 85.473 173.964 85.8345C173.224 86.1961 172.575 86.7195 172.065 87.366C171.554 88.0126 171.196 88.7656 171.015 89.5696C170.835 90.3735 170.838 91.2077 171.024 92.0104C171.209 92.8131 171.573 93.5638 172.087 94.2069C172.602 94.85 173.255 95.3691 173.997 95.7257C174.739 96.0824 175.552 96.2674 176.375 96.2672H209.888C211.206 96.2672 212.47 95.7434 213.402 94.8109C214.333 93.8785 214.857 92.6139 214.857 91.2952C214.857 89.9766 214.333 88.7119 213.402 87.7795C212.47 86.8471 211.206 86.3233 209.888 86.3233L209.89 86.3173Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M158.813 204.67C159.407 204.671 159.989 204.835 160.497 205.143C160.75 204.053 161.364 203.081 162.239 202.384C163.115 201.688 164.2 201.309 165.319 201.309C165.523 201.31 165.727 201.323 165.929 201.349C166.584 199.885 167.722 198.691 169.151 197.965C170.58 197.24 172.215 197.027 173.782 197.362C175.35 197.697 176.755 198.56 177.763 199.807C178.771 201.054 179.321 202.609 179.321 204.212V204.338C179.803 204.108 180.33 203.989 180.864 203.99C181.807 204.012 182.704 204.402 183.364 205.078C184.023 205.753 184.392 206.66 184.392 207.604C184.392 208.548 184.023 209.455 183.364 210.131C182.704 210.806 181.807 211.197 180.864 211.219H158.813C157.947 211.219 157.116 210.874 156.503 210.261C155.89 209.648 155.546 208.816 155.546 207.949C155.546 207.082 155.89 206.25 156.503 205.637C157.116 205.024 157.947 204.68 158.813 204.68V204.67Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M378.083 276.2L378.031 276.399C377.915 276.804 377.755 277.195 377.556 277.567C377.192 278.358 376.594 279.02 375.844 279.463C375.093 279.907 374.226 280.11 373.357 280.047C372.935 280.041 372.516 279.992 372.105 279.899L371.906 279.85L371.959 279.651C372.076 279.246 372.235 278.856 372.434 278.485C372.798 277.693 373.395 277.03 374.146 276.587C374.897 276.144 375.765 275.941 376.634 276.005C377.055 276.01 377.474 276.059 377.884 276.151L378.083 276.2ZM372.417 279.545C372.959 279.643 374.448 279.814 375.636 279.112C376.825 278.41 377.395 277.024 377.574 276.501C377.03 276.405 375.543 276.234 374.352 276.936C373.162 277.638 372.593 279.024 372.417 279.545Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M375.245 280.957C373.355 281.671 371.248 280.727 371.248 280.727C371.248 280.727 372.206 278.624 374.098 277.912C375.99 277.201 378.095 278.143 378.095 278.143C378.095 278.143 377.143 280.245 375.245 280.957Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M371.198 253.47V253.725C371.18 254.248 371.106 254.768 370.977 255.276C370.779 256.072 370.359 257.221 369.485 258.084C368.61 258.947 367.465 259.353 366.66 259.54C366.151 259.661 365.63 259.728 365.106 259.739H364.852V259.484C364.871 258.96 364.946 258.44 365.074 257.931C365.273 257.136 365.69 255.988 366.565 255.123C367.439 254.258 368.584 253.854 369.391 253.667C369.9 253.547 370.421 253.481 370.944 253.468L371.198 253.47ZM365.372 259.224C366.058 259.176 367.906 258.931 369.127 257.724C370.347 256.517 370.618 254.671 370.675 253.987C369.991 254.037 368.143 254.28 366.921 255.487C365.698 256.694 365.43 258.532 365.372 259.216V259.224Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M369.215 260.063C367.148 261.497 364.319 260.996 364.319 260.996C364.319 260.996 364.842 258.17 366.903 256.736C368.964 255.302 371.799 255.803 371.799 255.803C371.799 255.803 371.28 258.629 369.215 260.063Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M108.869 246.788L109.03 246.925C109.354 247.218 109.646 247.544 109.903 247.898C110.476 248.596 110.823 249.453 110.896 250.354C110.97 251.255 110.767 252.157 110.314 252.939C110.12 253.33 109.884 253.699 109.611 254.039L109.475 254.202L109.312 254.065C108.99 253.772 108.698 253.446 108.442 253.093C107.868 252.394 107.522 251.537 107.448 250.636C107.375 249.735 107.578 248.833 108.03 248.051C108.226 247.661 108.461 247.291 108.732 246.949L108.869 246.788ZM109.424 253.59C109.76 253.126 110.592 251.816 110.477 250.388C110.362 248.96 109.326 247.802 108.919 247.405C108.585 247.87 107.75 249.181 107.867 250.607C107.985 252.032 109.018 253.188 109.416 253.59H109.424Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M112.022 251.589C111.823 253.677 109.997 255.217 109.997 255.217C109.997 255.217 108.472 253.369 108.663 251.283C108.854 249.197 110.686 247.655 110.686 247.655C110.686 247.655 112.211 249.493 112.022 251.589Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M68.6528 270.906L68.8297 270.894C69.1964 270.88 69.5635 270.904 69.9249 270.968C70.679 271.05 71.3899 271.361 71.9628 271.859C72.5357 272.356 72.9431 273.017 73.1308 273.752C73.2438 274.102 73.3184 274.462 73.3535 274.828L73.3674 275.005L73.1885 275.017C72.8219 275.032 72.4548 275.008 72.0933 274.945C71.3396 274.863 70.6291 274.552 70.0566 274.054C69.4841 273.557 69.0769 272.896 68.8893 272.161C68.7774 271.811 68.7021 271.451 68.6647 271.085L68.6528 270.906ZM72.9778 274.673C72.9082 274.198 72.6399 272.919 71.7316 272.127C70.8233 271.336 69.5214 271.248 69.0404 271.244C69.112 271.72 69.3803 272.998 70.2866 273.79C71.193 274.581 72.4968 274.669 72.9778 274.673Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M73.3656 271.944C74.4767 273.31 74.2759 275.315 74.2759 275.315C74.2759 275.315 72.2744 275.1 71.1654 273.724C70.0563 272.347 70.255 270.343 70.255 270.343C70.255 270.343 72.2486 270.573 73.3656 271.944Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M317.867 265.477H318.066C318.478 265.477 318.888 265.521 319.29 265.608C320.133 265.734 320.918 266.116 321.537 266.702C322.157 267.288 322.583 268.05 322.757 268.885C322.866 269.282 322.933 269.689 322.955 270.1V270.299H322.757C322.345 270.299 321.935 270.255 321.532 270.168C320.689 270.042 319.905 269.66 319.286 269.074C318.666 268.489 318.24 267.727 318.066 266.893C317.958 266.495 317.891 266.087 317.867 265.675V265.477ZM322.546 269.898C322.488 269.361 322.246 267.909 321.264 266.986C320.282 266.063 318.827 265.9 318.283 265.874C318.34 266.411 318.581 267.863 319.563 268.784C320.544 269.705 322.007 269.872 322.546 269.898Z\"\n        fill=\"#E4E4E4\"\n      />\n      <path\n        d=\"M323.105 266.855C324.297 268.446 323.972 270.675 323.972 270.675C323.972 270.675 321.737 270.345 320.555 268.76C319.372 267.175 319.69 264.938 319.69 264.938C319.69 264.938 321.922 265.27 323.105 266.855Z\"\n        fill=\"#F2F2F2\"\n      />\n      <path\n        d=\"M262.452 283.525H170.045L171.727 277.433L175.01 265.54L176.998 258.339L179.93 247.723L185.58 227.256L188.512 216.638L209.121 141.999H223.376L230.929 169.355L243.985 216.638L246.917 227.256L252.568 247.723L255.499 258.339L260.77 277.433L262.452 283.525Z\"\n        fill=\"#4656A1\"\n      />\n      <path\n        d=\"M262.46 283.525H170.038L171.719 277.433L175.003 265.54C239.4 261.733 230.921 169.353 230.921 169.353L260.763 277.433L262.46 283.525Z\"\n        fill=\"#38488C\"\n      />\n      <path\n        d=\"M281.358 283.525H151.138V295.913H281.358V283.525Z\"\n        fill=\"#38488C\"\n      />\n      <path\n        d=\"M262.452 283.525H170.045L171.727 277.433H260.77L262.452 283.525Z\"\n        fill=\"#232851\"\n      />\n      <path\n        d=\"M246.917 227.256C246.917 227.256 244.981 268.12 198.06 277.467L260.77 277.433L246.917 227.256Z\"\n        fill=\"#2B3872\"\n      />\n      <path\n        d=\"M246.917 227.256H185.58L188.512 216.638H243.985L246.917 227.256Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M255.499 258.339H176.998L179.93 247.723H252.568L255.499 258.339Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M251.238 283.525C251.238 283.525 233.978 296.563 170.045 295.913H281.36V283.525H251.238Z\"\n        fill=\"#2B3872\"\n      />\n      <path\n        d=\"M300.492 295.752H130.191C129.035 295.752 128.098 296.69 128.098 297.846V297.906C128.098 299.062 129.035 300 130.191 300H300.492C301.648 300 302.585 299.062 302.585 297.906V297.846C302.585 296.69 301.648 295.752 300.492 295.752Z\"\n        fill=\"#242850\"\n      />\n      <path\n        d=\"M133.418 295.752H105.84C104.685 295.752 103.748 296.69 103.748 297.846V297.906C103.748 299.062 104.685 300 105.84 300H133.418C134.574 300 135.511 299.062 135.511 297.906V297.846C135.511 296.69 134.574 295.752 133.418 295.752Z\"\n        fill=\"#242850\"\n      />\n      <path\n        d=\"M93.1977 295.752H64.2228C63.0669 295.752 62.1299 296.69 62.1299 297.846V297.906C62.1299 299.062 63.0669 300 64.2228 300H93.1977C94.3536 300 95.2906 299.062 95.2906 297.906V297.846C95.2906 296.69 94.3536 295.752 93.1977 295.752Z\"\n        fill=\"#242850\"\n      />\n      <path\n        d=\"M337.256 295.752H313.473C312.317 295.752 311.38 296.69 311.38 297.846V297.906C311.38 299.062 312.317 300 313.473 300H337.256C338.412 300 339.349 299.062 339.349 297.906V297.846C339.349 296.69 338.412 295.752 337.256 295.752Z\"\n        fill=\"#242850\"\n      />\n      <path\n        d=\"M368.35 295.752H350.259C349.103 295.752 348.166 296.69 348.166 297.846V297.906C348.166 299.062 349.103 300 350.259 300H368.35C369.506 300 370.443 299.062 370.443 297.906V297.846C370.443 296.69 369.506 295.752 368.35 295.752Z\"\n        fill=\"#242850\"\n      />\n    </svg>\n    <h1 className=\"mt-4 text-white not-found\">PAGE NOT FOUND</h1>\n    <p className=\"not-found-solution\">\n      we’re sorry, the page you requested could not be found Please go back to\n      the homepage\n    </p>\n  </div>\n)\n\nexport default NotFound\n","import {Component} from 'react'\nimport './CasesInName.css'\n\nclass CasesInName extends Component {\n  state = {\n    confirmedButton: false,\n    activeButton: false,\n    recoveredButton: false,\n    deceseadButton: false,\n  }\n\n  render() {\n    const {\n      confirmedButton,\n      activeButton,\n      deceseadButton,\n      recoveredButton,\n    } = this.state\n    const {covidData, stateName, onchangeTopDisticts} = this.props\n    const confrimed = Object.keys(covidData)\n      .filter(state => state === stateName)\n      .map(e => covidData[e].total.confirmed)\n\n    const deceased = Object.keys(covidData)\n      .filter(state => state === stateName)\n      .map(e => covidData[e].total.deceased)\n\n    const recovered = Object.keys(covidData)\n      .filter(state => state === stateName)\n      .map(e => covidData[e].total.recovered)\n\n    const active = confrimed - recovered - deceased\n    const onChangeCasesToConfirmed = () => {\n      onchangeTopDisticts('confirmed')\n\n      this.setState({\n        confirmedButton: true,\n        activeButton: false,\n        deceseadButton: false,\n        recoveredButton: false,\n      })\n    }\n    const onChangeCasesToActive = () => {\n      onchangeTopDisticts('active')\n\n      this.setState({\n        confirmedButton: false,\n        activeButton: true,\n        deceseadButton: false,\n        recoveredButton: false,\n      })\n    }\n    const onChangeCasesToRecovered = () => {\n      onchangeTopDisticts('recovered')\n\n      this.setState({\n        confirmedButton: false,\n        activeButton: false,\n        deceseadButton: false,\n        recoveredButton: true,\n      })\n    }\n    const onChangeCasesToDeceased = () => {\n      onchangeTopDisticts('deceased')\n      this.setState({\n        confirmedButton: false,\n        activeButton: false,\n        deceseadButton: true,\n        recoveredButton: false,\n      })\n    }\n    const confirmedButtonClass = confirmedButton ? 'confirmed' : 'card'\n    const activeButtonClass = activeButton ? 'active' : 'card'\n    const deceseadButtonClass = deceseadButton ? 'deceased' : 'card'\n    const recoveredButtonClass = recoveredButton ? 'recovered' : 'card'\n    return (\n      <div className=\"state-cases container mt-5\">\n        <div className=\"state-cases-row row justify-content-center\">\n          <button\n            type=\"button\"\n            className={`state-cases-confirmed card-name cases-confirmed col-5 col-lg-2 ${confirmedButtonClass}`}\n            onClick={onChangeCasesToConfirmed}\n          >\n            <h1 className=\"card-name-tittle\">Confirmed</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976788/samples/covid-19/Group_l5hjgx_pnrpdy.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{confrimed}</p>\n          </button>\n          <button\n            type=\"button\"\n            className={`state-cases-active cases-active card-name col-5 col-lg-2 ${activeButtonClass}`}\n            onClick={onChangeCasesToActive}\n          >\n            <h1 className=\"card-name-tittle\">Active</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976787/samples/covid-19/protection_1_lmcx9l_opctg3.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{active}</p>\n          </button>\n          <button\n            type=\"button\"\n            className={`state-cases-recovered cases-recovered card-name col-5 col-lg-2 ${recoveredButtonClass}`}\n            onClick={onChangeCasesToRecovered}\n          >\n            <h1 className=\"card-name-tittle\">Recoverd</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976786/samples/covid-19/recovered_1_qs1y8f_tlshd6.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{recovered}</p>\n          </button>\n          <button\n            type=\"button\"\n            className={`state-cases-deceased cases-deceased card-name col-5 col-lg-2 ${deceseadButtonClass}`}\n            onClick={onChangeCasesToDeceased}\n          >\n            <h1 className=\"card-name-tittle\">Deceased</h1>\n            <img\n              className=\"card-name-image\"\n              src=\"https://res.cloudinary.com/dfpnsmzzg/image/upload/v1625976787/samples/covid-19/Outline_qoly2o_vyqewd.png\"\n              alt=\"confirmed\"\n            />\n            <p className=\"card-name-value\">{deceased}</p>\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CasesInName\n","import {Component} from 'react'\nimport './Districts.css'\n\nconst objectPath = require('object-path')\n\nclass Districts extends Component {\n  getTopDirstictActiveCases = () => {\n    const {distData, distNames} = this.props\n\n    const formate = distNames.map(element => ({\n      stateName: element,\n      value:\n        objectPath.get(distData, `${element}.total.confirmed`) -\n        objectPath.get(distData, `${element}.total.deceased`) -\n        objectPath.get(distData, `${element}.total.recovered`),\n    }))\n\n    formate.sort((a, b) => b.value - a.value)\n\n    const distElement = formate.map(eachState => (\n      <p className=\"each-dist col-6 col-md-3\" key={eachState.stateName}>\n        {eachState.value}\n        <span className=\"dist-name ml-1\">{eachState.stateName}</span>\n      </p>\n    ))\n    return distElement\n  }\n\n  getTopDirstict = () => {\n    const {casesType} = this.props\n    const {distData, distNames} = this.props\n\n    const formate = distNames.map(element => ({\n      distName: element,\n      value: objectPath.get(distData, `${element}.total.${casesType}`),\n    }))\n\n    formate.sort((a, b) => b.value - a.value)\n    const removeNonValues = formate.filter(eachDist => eachDist.value > 0)\n    const distElement = removeNonValues.map(eachDist => (\n      <p className=\"each-dist col-6 col-md-3\" key={eachDist.stateName}>\n        {eachDist.value}\n        <span className=\"dist-name ml-1\"> {eachDist.distName}</span>\n      </p>\n    ))\n    return distElement\n  }\n\n  render() {\n    const {activeCaseType} = this.props\n    return (\n      <div className=\"container\">\n        <div className=\"row  ml-5\">\n          {activeCaseType\n            ? this.getTopDirstictActiveCases()\n            : this.getTopDirstict()}\n        </div>\n      </div>\n    )\n  }\n}\nexport default Districts\n","import {Component} from 'react'\nimport './BarGraphs.css'\nimport {Bar} from 'react-chartjs-2'\n\nclass BarGraphs extends Component {\n  render() {\n    const {forBarGraph} = this.props\n    const {forDateLabels} = forBarGraph\n    const {\n      forConfirmedCases,\n      forRecoveredCases,\n      forDeceasedCases,\n      forActiveCases,\n    } = forBarGraph\n\n    const dataForConfirmedCases = {\n      labels: forDateLabels,\n      datasets: [\n        {\n          label: 'Confirmed Cases',\n          fill: false,\n          backgroundColor: '#9A0E31',\n          color: '#9A0E31',\n          borderColor: '#9A0E31',\n          borderWidth: 2,\n          borderRadius: 10,\n          data: forConfirmedCases,\n        },\n      ],\n    }\n    const dataForActiveCases = {\n      labels: forDateLabels,\n      datasets: [\n        {\n          label: 'Active Cases',\n          fill: false,\n          backgroundColor: '#0A4FA0',\n          color: '#0A4FA0',\n          borderColor: '#0A4FA0',\n          borderWidth: 2,\n          borderRadius: 10,\n          data: forActiveCases,\n        },\n      ],\n    }\n    const dataForRecoveredCases = {\n      labels: forDateLabels,\n      datasets: [\n        {\n          label: 'Recovered Cases',\n          fill: false,\n          backgroundColor: '#216837',\n          color: '#216837',\n          borderColor: '#216837',\n          borderRadius: 10,\n          data: forRecoveredCases,\n        },\n      ],\n    }\n    const dataForDeceasedCases = {\n      labels: forDateLabels,\n      datasets: [\n        {\n          label: 'Deceased Cases',\n          fill: false,\n          backgroundColor: '#474C57',\n          color: '#474C57',\n          borderColor: '#474C57',\n          borderRadius: 10,\n          data: forDeceasedCases,\n        },\n      ],\n    }\n\n    return (\n      <div className=\"bar-graphs-container container mt-5\">\n        <div className=\"row justify-content-around\">\n          <div className=\"confirmed-chart col-12 col-lg-8 mt-5\">\n            <Bar\n              data={dataForConfirmedCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Confirmed Cases',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"active-chart col-12 col-lg-8 mt-5\">\n            <Bar\n              data={dataForActiveCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Active Cases',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"recoverd-chart col-12 col-lg-8 mt-5\">\n            <Bar\n              data={dataForRecoveredCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Recovered Cases',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"deceased-chart col-12 col-lg-8 mt-5\">\n            <Bar\n              data={dataForDeceasedCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Deceased Cases',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default BarGraphs\n","import {Component} from 'react'\nimport './Linegraphs.css'\nimport {Line} from 'react-chartjs-2'\n\nclass LineGraphs extends Component {\n  render() {\n    const {forLineGraphs} = this.props\n    const {forMonthLabels} = forLineGraphs\n\n    const {\n      forConfirmedCases,\n      forRecoveredCases,\n      forDeceasedCases,\n      forActiveCases,\n      forTestedCases,\n      forVaccinatedOneCases,\n      forVaccinatedTwoCases,\n    } = forLineGraphs\n\n    const dataForConfirmedCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Confirmed',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#FF073A',\n          color: '#FF073A',\n          borderColor: '#FF073A',\n          borderWidth: 2,\n          pointHoverBorderColor: '#ffffff',\n          data: forConfirmedCases,\n        },\n      ],\n    }\n    const dataForActiveCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Total Active',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#007BFF',\n          color: '#007BFF',\n          borderColor: '#007BFF',\n          borderWidth: 2,\n          pointHoverBorderColor: '#ffffff',\n          data: forActiveCases,\n        },\n      ],\n    }\n    const dataForRecoveredCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Recovered',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#27A243',\n          color: '#27A243',\n          borderColor: '#27A243',\n          borderWidth: 2,\n          pointHoverBorderColor: '#ffffff',\n          data: forRecoveredCases,\n        },\n      ],\n    }\n    const dataForDeceasedCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Deceased',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#6C757D',\n          color: '#6C757D',\n          borderColor: '#6C757D',\n          borderWidth: 2,\n          pointHoverBorderColor: '#ffffff',\n          data: forDeceasedCases,\n        },\n      ],\n    }\n    const dataForTestedCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Tested',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#9673B9',\n          color: '#9673B9',\n          borderColor: '#9673B9',\n          pointHoverBorderColor: '#ffffff',\n          borderWidth: 2,\n          data: forTestedCases,\n        },\n      ],\n    }\n    const dataForTestRatioCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Test Positivity Ratio (confirmed/tested)',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#FD7E14',\n          color: '#FD7E14',\n          borderColor: '#FD7E14',\n          pointHoverBorderColor: '#ffffff',\n          borderWidth: 2,\n          data: forVaccinatedOneCases,\n        },\n      ],\n    }\n    const dataForVaccinatedCases = {\n      labels: forMonthLabels,\n      datasets: [\n        {\n          label: 'Total Vaccinated',\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: '#F95581',\n          color: 'white',\n          borderColor: '#F95581',\n          borderWidth: 2,\n          pointHoverBorderColor: '#ffffff',\n          data: forVaccinatedTwoCases,\n        },\n      ],\n    }\n\n    return (\n      <div className=\"line-chart-container container mt-5\">\n        <div className=\"row justify-content-center\">\n          <div className=\"red-confirmed-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForConfirmedCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Active per month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"blue-active-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForActiveCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Active per month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"green-recovered-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForRecoveredCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Recovered per month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"grey-deceased-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForDeceasedCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Deceased per month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"voilet-tested-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForTestedCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Tested per month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"pink-tested-ratio-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForTestRatioCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Test Positivity per Month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n          <div className=\"light-pink-vaccinated-chart col-12 col-lg-8 mt-5\">\n            <Line\n              data={dataForVaccinatedCases}\n              options={{\n                title: {\n                  display: true,\n                  text: 'Average Vaccinated ( One Dose) per month',\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: 'right',\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default LineGraphs\n","import {Component} from 'react'\nimport './CovidGraphs.css'\nimport BarGraphs from './BarGraphs/BarGraphs'\nimport LineGraphs from './Linegraphs/Linegraphs'\n\nclass CovidGraphs extends Component {\n  state = {barGraphs: true, lineGraphs: false}\n\n  getBarGraphs = () => {\n    this.setState({barGraphs: true, lineGraphs: false})\n  }\n\n  getLineGraphs = () => {\n    this.setState({barGraphs: false, lineGraphs: true})\n  }\n\n  render() {\n    const {forBarGraph, forLineGraphs} = this.props\n    const {barGraphs, lineGraphs} = this.state\n    return (\n      <div className=\"graphs-container container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"toggler-container mt-5\">\n            <h1 className=\"spread-heading text-white\">Spread Trends</h1>\n            <div className=\"toggles text-center\">\n              <button\n                className=\"get-bar-graphs btn toggler-button\"\n                type=\"button\"\n                onClick={this.getBarGraphs}\n              >\n                Daily\n              </button>\n              <button\n                className=\"get-line-graphs btn toggler-button \"\n                type=\"button\"\n                onClick={this.getLineGraphs}\n              >\n                Cumulative\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bar-and-line-graphs\">\n          {barGraphs && <BarGraphs forBarGraph={forBarGraph} />}\n          {lineGraphs && <LineGraphs forLineGraphs={forLineGraphs} />}\n        </div>\n      </div>\n    )\n  }\n}\nexport default CovidGraphs\n","import {Component} from 'react'\n\nimport {format} from 'date-fns'\nimport CasesInName from '../CasesInName/CasesInName'\nimport './CovidState.css'\nimport Districts from './Districts/Districts'\nimport CovidGraphs from '../CovidGraphs/CovidGraphs'\n\nconst objectPath = require('object-path')\n\nconst statesList = [\n  {\n    state_code: 'AN',\n    state_name: 'Andaman and Nicobar Islands',\n  },\n  {\n    state_code: 'AP',\n    state_name: 'Andhra Pradesh',\n  },\n  {\n    state_code: 'AR',\n    state_name: 'Arunachal Pradesh',\n  },\n  {\n    state_code: 'AS',\n    state_name: 'Assam',\n  },\n  {\n    state_code: 'BR',\n    state_name: 'Bihar',\n  },\n  {\n    state_code: 'CH',\n    state_name: 'Chandigarh',\n  },\n  {\n    state_code: 'CT',\n    state_name: 'Chhattisgarh',\n  },\n  {\n    state_code: 'DN',\n    state_name: 'Dadra and Nagar Haveli and Daman and Diu',\n  },\n  {\n    state_code: 'DL',\n    state_name: 'Delhi',\n  },\n  {\n    state_code: 'GA',\n    state_name: 'Goa',\n  },\n  {\n    state_code: 'GJ',\n    state_name: 'Gujarat',\n  },\n  {\n    state_code: 'HR',\n    state_name: 'Haryana',\n  },\n  {\n    state_code: 'HP',\n    state_name: 'Himachal Pradesh',\n  },\n  {\n    state_code: 'JK',\n    state_name: 'Jammu and Kashmir',\n  },\n  {\n    state_code: 'JH',\n    state_name: 'Jharkhand',\n  },\n  {\n    state_code: 'KA',\n    state_name: 'Karnataka',\n  },\n  {\n    state_code: 'KL',\n    state_name: 'Kerala',\n  },\n  {\n    state_code: 'LA',\n    state_name: 'Ladakh',\n  },\n  {\n    state_code: 'LD',\n    state_name: 'Lakshadweep',\n  },\n  {\n    state_code: 'MH',\n    state_name: 'Maharashtra',\n  },\n  {\n    state_code: 'MP',\n    state_name: 'Madhya Pradesh',\n  },\n  {\n    state_code: 'MN',\n    state_name: 'Manipur',\n  },\n  {\n    state_code: 'ML',\n    state_name: 'Meghalaya',\n  },\n  {\n    state_code: 'MZ',\n    state_name: 'Mizoram',\n  },\n  {\n    state_code: 'NL',\n    state_name: 'Nagaland',\n  },\n  {\n    state_code: 'OR',\n    state_name: 'Odisha',\n  },\n  {\n    state_code: 'PY',\n    state_name: 'Puducherry',\n  },\n  {\n    state_code: 'PB',\n    state_name: 'Punjab',\n  },\n  {\n    state_code: 'RJ',\n    state_name: 'Rajasthan',\n  },\n  {\n    state_code: 'SK',\n    state_name: 'Sikkim',\n  },\n  {\n    state_code: 'TN',\n    state_name: 'Tamil Nadu',\n  },\n  {\n    state_code: 'TG',\n    state_name: 'Telangana',\n  },\n  {\n    state_code: 'TR',\n    state_name: 'Tripura',\n  },\n  {\n    state_code: 'UP',\n    state_name: 'Uttar Pradesh',\n  },\n  {\n    state_code: 'UT',\n    state_name: 'Uttarakhand',\n  },\n  {\n    state_code: 'WB',\n    state_name: 'West Bengal',\n  },\n]\n\nclass CovidState extends Component {\n  state = {\n    covidData: {},\n    stateFullName: '',\n    stateNameId: '',\n    distNames: [],\n    allDistsData: {},\n    casesType: 'confirmed',\n    activeCaseType: false,\n    lastUpdatedDateVal: '',\n    testedCountVal: '',\n\n    forBarGraph: {},\n    forLineGraphs: {},\n  }\n\n  componentDidMount() {\n    this.getCovidData()\n    this.getDatesData()\n  }\n\n  getDatesData = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const response = await fetch(\n      'https://data.covid19india.org/v4/min/timeseries.min.json',\n    )\n    const fetchedData = await response.json()\n    const data = fetchedData[id].dates\n    this.getBargraphsData(data)\n    this.getLineGraphsData(data)\n  }\n\n  getBargraphsData = data => {\n    const datesKeysList = Object.keys(data)\n\n    const allDatesLabels = []\n    datesKeysList.forEach(item =>\n      allDatesLabels.push(format(new Date(item), 'd MMM').toString()),\n    )\n    const allTendatesLabels = allDatesLabels.reverse().splice(0, 10)\n\n    const dateCountConfirmedList = []\n    const dateCountRecoveredList = []\n    const dateCountDeceasedList = []\n    const dateCountActiveList = []\n\n    allTendatesLabels.reverse().forEach(label => {\n      datesKeysList.forEach(item => {\n        if (format(new Date(item), 'd MMM').toString() === label) {\n          if (format(new Date(item), 'y').toString() === '2021') {\n            dateCountConfirmedList.push(data[item].delta.confirmed)\n            if (\n              Number.isNaN(data[item].delta.deceased) ||\n              data[item].delta.deceased === undefined\n            ) {\n              dateCountDeceasedList.push(0)\n            } else {\n              dateCountDeceasedList.push(data[item].delta.deceased)\n            }\n            if (\n              Number.isNaN(data[item].delta.recovered) ||\n              data[item].delta.recovered === undefined\n            ) {\n              dateCountRecoveredList.push(0)\n            } else {\n              dateCountRecoveredList.push(data[item].delta.recovered)\n            }\n            dateCountActiveList.push(\n              data[item].total.confirmed -\n                data[item].total.recovered -\n                data[item].total.deceased,\n            )\n          }\n        }\n      })\n    })\n\n    const barGraphsDataObject = {\n      forDateLabels: allTendatesLabels,\n      forConfirmedCases: dateCountConfirmedList,\n      forRecoveredCases: dateCountRecoveredList,\n      forDeceasedCases: dateCountDeceasedList,\n      forActiveCases: dateCountActiveList,\n    }\n    this.setState({forBarGraph: barGraphsDataObject})\n  }\n\n  getLineGraphsData = data => {\n    const datesKeysList = Object.keys(data)\n    const allMonthsLabels = []\n    datesKeysList.forEach(item =>\n      allMonthsLabels.push(format(new Date(item), 'MMM Y').toString()),\n    )\n    const confirmedList = []\n    const recoveredList = []\n    const activeList = []\n    const deceasedList = []\n    const testedList = []\n    const vaccinatedOneList = []\n    const vaccinatedTwoList = []\n\n    const allUniQueMonthlabels = [...new Set(allMonthsLabels)]\n\n    allUniQueMonthlabels.forEach(label => {\n      datesKeysList.forEach(item => {\n        if (format(new Date(item), 'MMM Y').toString() === label) {\n          if (\n            format(new Date(item), 'd').toString() ===\n            new Date(\n              new Date(item).getFullYear(),\n              new Date(item).getMonth() + 1,\n              0,\n            )\n              .getDate()\n              .toString()\n          ) {\n            deceasedList.push(data[item].total.deceased)\n            confirmedList.push(data[item].total.confirmed)\n            recoveredList.push(data[item].total.recovered)\n            vaccinatedOneList.push(\n              (data[item].total.confirmed / data[item].total.tested).toFixed(2),\n            )\n            if (\n              Number.isNaN(data[item].total.vaccinated1) ||\n              data[item].total.vaccinated1 === undefined\n            ) {\n              vaccinatedTwoList.push(0)\n            } else {\n              vaccinatedTwoList.push(data[item].total.vaccinated1)\n            }\n\n            testedList.push(data[item].total.tested)\n            activeList.push(\n              data[item].total.confirmed -\n                data[item].total.recovered -\n                data[item].total.deceased,\n            )\n          }\n        }\n      })\n    })\n    allUniQueMonthlabels.splice(10, 1)\n\n    const LineGraphsDataObject = {\n      forMonthLabels: allUniQueMonthlabels,\n      forConfirmedCases: confirmedList,\n      forRecoveredCases: recoveredList,\n      forDeceasedCases: deceasedList,\n      forActiveCases: activeList,\n      forTestedCases: testedList,\n      forVaccinatedOneCases: vaccinatedOneList,\n      forVaccinatedTwoCases: vaccinatedTwoList,\n    }\n    this.setState({forLineGraphs: LineGraphsDataObject})\n  }\n\n  onchangeTopDisticts = casesTypeChnage => {\n    if (casesTypeChnage === 'active') {\n      this.setState({activeCaseType: true})\n    } else {\n      this.setState({casesType: casesTypeChnage, activeCaseType: false})\n    }\n  }\n\n  getCovidData = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const response = await fetch(\n      'https://data.covid19india.org/v4/min/data.min.json',\n    )\n    const data = await response.json()\n\n    const distData = data[id].districts\n    const newDistNamesList = Object.keys(distData)\n\n    const value = statesList.find(\n      eachStateObject => eachStateObject.state_code === id,\n    )\n    const answer = objectPath.get(value, `state_name`)\n\n    const lastUpdatedDate = data[id].meta.last_updated\n    const testedCount = data[id].delta7.tested\n\n    this.setState({\n      covidData: data,\n      stateFullName: answer,\n      stateNameId: id,\n      distNames: newDistNamesList,\n      allDistsData: distData,\n      lastUpdatedDateVal: lastUpdatedDate,\n      testedCountVal: testedCount,\n    })\n  }\n\n  render() {\n    const {\n      covidData,\n      stateFullName,\n      stateNameId,\n      distNames,\n      allDistsData,\n      activeCaseType,\n      casesType,\n      lastUpdatedDateVal,\n      testedCountVal,\n      forBarGraph,\n      forLineGraphs,\n    } = this.state\n    const date = new Date(lastUpdatedDateVal)\n    return (\n      <div className=\"covid-state-container covid-state-component\">\n        <div className=\"state-name-container name-container container \">\n          <div className=\"state-container row pt-5 justify-content-between\">\n            <div className=\"state-full-name-container col-3\">\n              <p className=\"state-full-name mt-1\">{stateFullName}</p>\n            </div>\n            <div className=\"test-numbers-container col-3 mr-5 text-right\">\n              <p className=\"tested-text\">Tested</p>\n              <p className=\"tested-number\">{testedCountVal}</p>\n            </div>\n          </div>\n          <p className=\"update-status\">\n            Last update on{' '}\n            {`${date.toLocaleString('default', {\n              month: 'long',\n            })} ${date.getDate()}th ${date.getFullYear()}`}\n          </p>\n          <div className=\"state-cases-container row \">\n            <CasesInName\n              covidData={covidData}\n              stateName={stateNameId}\n              onchangeTopDisticts={this.onchangeTopDisticts}\n            />\n          </div>\n          <div className=\"distict-cases-container row\">\n            <h1 className=\"top-districts-heading text-danger\">Top Districts</h1>\n            <Districts\n              distData={allDistsData}\n              distNames={distNames}\n              casesType={casesType}\n              activeCaseType={activeCaseType}\n            />\n          </div>\n          <div className=\"covid-graphs-main-container\">\n            <CovidGraphs\n              forBarGraph={forBarGraph}\n              forLineGraphs={forLineGraphs}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CovidState\n","import {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport NavBar from './components/NavBar/NavBar'\nimport CovidHome from './components/CovidHome/CovidHome'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\nimport CovidAbout from './components/CovidAbout/CovidAbout'\nimport NotFound from './components/NotFound/NotFound'\nimport CovidState from './components/CovidState/CovidState'\n\nconst App = () => (\n  <BrowserRouter>\n    <NavBar />\n    <Switch>\n      <Route exact path=\"/\" component={CovidHome} />\n      <Route exact path=\"/about\" component={CovidAbout} />\n      <Route exact path=\"/state/:id\" component={CovidState} />\n      <Route component={NotFound} />\n    </Switch>\n\n    <Footer />\n  </BrowserRouter>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}